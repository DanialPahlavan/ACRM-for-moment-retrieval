import os
from yacs.config import CfgNode as CN

_C = CN()

##############
#### MISC ####
_C.EXPERIMENT_NAME = ""
_C.ENGINE_STAGE = "TRAINER"
_C.MODE_TRAIN = 'resume0'
_C.MODE_TRAIN_RESUME_EPOCH = '0'
_C.LOG_DIRECTORY = ""
_C.VISUALIZATION_DIRECTORY = ""
_C.PATHS_CATALOG = os.path.join(os.path.dirname(__file__), "paths_catalog.py")
_C.FEATURE_TYPE = 'c3d'
_C.MODEL_NAME= 'ACRM' 
##############
#### TEST ####
_C.TEST = CN()
_C.TEST.MODEL = ""

##################
#### Dataset #####

_C.DATASETS = CN()
_C.DATASETS.NUMBER_CLASSES = 200
_C.DATASETS.PORTION_OF_DATA = 1.

_C.DATASETS.TRAIN = ""
_C.DATASETS.TEST = ""
_C.DATASETS.TRAIN_SAMPLES = 0.
_C.DATASETS.TEST_SAMPLES = 0.


##################
#### Sentence #####

_C.SENTENCE = CN()
_C.SENTENCE.MIN_COUNT = 5
_C.SENTENCE.TRAIN_MAX_LENGTH = 30
_C.SENTENCE.TEST_MAX_LENGTH = 30

################
#### MODELS ####

_C.DYNAMIC_FILTER = CN(new_allowed=True)
_C.DYNAMIC_FILTER.TAIL_MODEL = "LSTM"
_C.DYNAMIC_FILTER.POOLING    = "MeanPoolingLayer"
_C.DYNAMIC_FILTER.HEAD_MODEL = "MLP"

_C.ACRM_QUERY = CN()
_C.ACRM_QUERY.TAIL_MODEL = "LSTM"
_C.ACRM_QUERY.POOLING    = "GatherLastLayer" #"MeanPoolingLayer""GatherLastLayer"
_C.ACRM_QUERY.HEAD_MODEL = "MLP"

_C.ACRM_VIDEO = CN()
_C.ACRM_VIDEO.TAIL_MODEL = "LSTM_VIDEO" #'LSTM_VIDEO'
_C.ACRM_VIDEO.POOLING    = "MeanPoolingLayer"
_C.ACRM_VIDEO.HEAD_MODEL = "MLP"

_C.ACRM_CLASSIFICATION = CN()
_C.ACRM_CLASSIFICATION.USED = True
_C.ACRM_CLASSIFICATION.FUSION = 'CROSS_COS' ## 'COS' 'SUB''CAT''CROSS_COS''CROSS_SUB'
_C.ACRM_CLASSIFICATION.INPUT_SIZE = 512
_C.ACRM_CLASSIFICATION.INPUT_SIZE_RNN = 256
_C.ACRM_CLASSIFICATION.HIDDEN_SIZE = 256
_C.ACRM_CLASSIFICATION.OUTPUT_SIZE = 1

_C.REDUCTION = CN()
_C.REDUCTION.INPUT_SIZE = 1024
_C.REDUCTION.OUTPUT_SIZE = 512

_C.LOCALIZATION = CN()
_C.LOCALIZATION.ACRM_INPUT_SIZE = 1024
_C.LOCALIZATION.ACRM_HIDDEN_SIZE = 256
_C.LOCALIZATION.ACRM_DROPOUT = 0.3
_C.LOCALIZATION.INPUT_SIZE = 512
_C.LOCALIZATION.HIDDEN_SIZE = 256
_C.LOCALIZATION.ACRM_NUM_LAYERS = 1
_C.LOCALIZATION.NUM_LAYERS = 2
_C.LOCALIZATION.BIAS = False
_C.LOCALIZATION.DROPOUT = 0.5
_C.LOCALIZATION.BIDIRECTIONAL = True
_C.LOCALIZATION.BATCH_FIRST = True

_C.CLASSIFICATION = CN()
_C.CLASSIFICATION.INPUT_SIZE = 512
_C.CLASSIFICATION.OUTPUT_SIZE = 1

_C.LOSS = CN()
_C.LOSS.ATTENTION = True
###################
#### OPTIMIZER ####

_C.SOLVER = CN(new_allowed=True)
_C.SOLVER.TYPE = "ADAM"
_C.SOLVER.EPSILON = 0.1

####################
#### EXPERIMENT ####
_C.BATCH_SIZE_TRAIN = 128
_C.BATCH_SIZE_TEST = 128
_C.NUM_WORKERS_TRAIN = 5
_C.NUM_WORKERS_TEST = 5
_C.EPOCHS = 10
